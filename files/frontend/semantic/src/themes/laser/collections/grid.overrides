/*******************************
         Theme Overrides
*******************************/

.ui.grid>.column:not(.row).la-column-right-lessPadding {
  padding-right: 0.1rem;
}
.ui.grid>.column:not(.row).la-column-left-lessPadding {
  padding-left: 0.1rem;
}


/* Special Grid for Timeline */
.ui.segment.la-timeLineSegment-contact {
  background-color:transparent;
  border: none;
  padding-top: 0;
  padding-bottom: 0;
  .ui.header {
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
  }
  i.circular.icon {
    box-shadow: 0 0 0 0.1em rgb(159 158 156) inset;
  }
}
.ui.segment.la-timeLineSegment-announcement {
  background-color:@white;
  border: none;
  padding: 0;
}
.la-timeLineGrid {
  border-left: 2px dashed #dcdcdc;
  margin-left: 25px;
  h2.ui.header{
    font-size: 1.1rem;
    padding-top:3px
  }
  .one.wide.column {
    position: relative;
  }
  .la-timeLineIcon{
    position: absolute;
    top: 0;
    z-index: 1;
  }
  .la-timeLineIcon-announcement{
    left: 1px;
    background-color:@white;
  }

  .la-timeLineIcon-contact {
    left: -7px;
    background-color:@laSecondaryBackground;
  }
  .la-timeLineIcon-link {
    left: -7px;
    background-color:@laSecondaryBackground;
  }
}
/*-------------------
      Stackable
--------------------*/

@media only screen and (max-width: @computerBreakpoint ) {
  .ui.stackable.grid {
    width: auto;
    //margin-left: 0em !important;
    //margin-right: 0em !important;
  }
  .ui.stackable.grid > .row > .wide.column,
  .ui.stackable.grid > .wide.column,
  .ui.stackable.grid > .column.grid > .column,
  .ui.stackable.grid > .column.row > .column,
  .ui.stackable.grid > .row > .column,
  .ui.stackable.grid > .column:not(.row),
  .ui.grid > .stackable.stackable.row > .column {
    width: 100% !important;
    margin: 0em 0em !important;
    box-shadow: none !important;
    padding: (@stackableRowSpacing / 2) (@stackableGutter / 2) !important;
  }
  .ui.stackable.grid:not(.vertically) > .row {
    margin: 0em;
    padding: 0em;
  }

  /* Coupling */
  .ui.container > .ui.stackable.grid > .column,
  .ui.container > .ui.stackable.grid > .row > .column {
    padding-left: 0em !important;
    padding-right: 0em !important;
  }

  /* Don't pad inside segment or nested grid */
  .ui.grid .ui.stackable.grid,
  .ui.segment:not(.vertical) .ui.stackable.page.grid {
    margin-left: -(@stackableGutter / 2) !important;
    margin-right: -(@stackableGutter / 2) !important;
  }

  /* Divided Stackable */
  .ui.stackable.divided.grid > .row:first-child > .column:first-child,
  .ui.stackable.celled.grid > .row:first-child > .column:first-child,
  .ui.stackable.divided.grid > .column:not(.row):first-child,
  .ui.stackable.celled.grid > .column:not(.row):first-child {
    border-top: none !important;
  }
  .ui.inverted.stackable.celled.grid > .column:not(.row),
  .ui.inverted.stackable.divided.grid > .column:not(.row),
  .ui.inverted.stackable.celled.grid > .row > .column,
  .ui.inverted.stackable.divided.grid > .row > .column {
    border-top: @stackableInvertedMobileBorder;
  }

  .ui.stackable.celled.grid > .column:not(.row),
  .ui.stackable.divided:not(.vertically).grid > .column:not(.row),
  .ui.stackable.celled.grid > .row > .column,
  .ui.stackable.divided:not(.vertically).grid > .row > .column {
    border-top: @stackableMobileBorder;
    box-shadow: none !important;
    padding-top: @stackableRowSpacing !important;
    padding-bottom: @stackableRowSpacing !important;
  }

  .ui.stackable.celled.grid > .row {
    box-shadow: none !important;
  }
  .ui.stackable.divided:not(.vertically).grid > .column:not(.row),
  .ui.stackable.divided:not(.vertically).grid > .row > .column {
    padding-left: 0em !important;
    padding-right: 0em !important;
  }

}