---
grails:
    assets:
        bundle: true
    profile: web
    codegen:
        defaultPackage: de.laser
    gorm:
        reactor:
            # whether to translate GORM events into Reactor events. disabled by default for performance reasons
            events: false
    cache:
        enabled: true
        config:
            cache:
                name: 'message'
        ehcache:
            ehcacheXmlLocation: 'ehcache.xml'
    exceptionresolver:
        params:
            exclude:
                - password

info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
        build:
            # build/* - should work if deployed as WAR
            date: '@info.app.build.date@'
            host: '@info.app.build.host@'
            javaVersion: '@info.app.build.javaVersion@'

spring:
    jmx:
        unique-names: true
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false
    devtools:
        livereload:
            enabled: false
        restart:
            additional-exclude:
                - '*.gsp'
                - '**/*.gsp'
                - '*.gson'
                - '**/*.gson'
                - 'logback.groovy'
                - '*.properties'
            enabled: true
            trigger-file: 'restart.trigger'

management:
    endpoints:
        enabled-by-default: false

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
        upload:
            maxFileSize:    104857600
            maxRequestSize: 104857600
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlet: none # fallback // TODO: html
                taglib: none
                staticparts: none

---
grails:
    plugin:
        auditLog:
            auditDomainClassName: 'org.codehaus.groovy.grails.plugins.orm.auditable.AuditLogEvent'
            defaultActor: 'SYS'
        databasemigration:
            updateOnStart:  true
        wkhtmltopdf:
            binary: '/usr/bin/wkhtmltopdf'
        springsecurity:
            authority:
                className: 'de.laser.auth.Role'
            userLookup:
                userDomainClassName: 'de.laser.auth.User'
                usernamePropertyName: 'username'
                authorityJoinClassName: 'de.laser.auth.UserRole'
#            password:
#                algorithm: 'SHA-256'
#                hash:
#                    iterations: 1
            successHandler:
                alwaysUseDefault: false
                defaultTargetUrl: '/home/index'
                logout:
                    afterLogoutUrl: '/'
            logout:
                postOnly: false
            controllerAnnotations:
                staticRules:
                    -   pattern: '/assets/**'
                        access: [ 'permitAll' ]
                    -   pattern: '/static/**'
                        access: [ 'permitAll' ]
                    -   pattern: '/**/js/**'
                        access: [ 'permitAll' ]
                    -   pattern: '/**/css/**'
                        access: [ 'permitAll' ]
                    -   pattern: '/**/images/**'
                        access: [ 'permitAll' ]
                    -   pattern: '/**/favicon.ico'
                        access: [ 'permitAll' ]
            filterChain:
                chainMap:
                    -   pattern: '/assets/**'
                        filters: 'none'
                    -   pattern: '/**/js/**'
                        filters: 'none'
                    -   pattern: '/**/css/**'
                        filters: 'none'
                    -   pattern: '/**/images/**'
                        filters: 'none'
                    -   pattern: '/**/favicon.ico'
                        filters: 'none'
                    -   pattern: '/**'
                        filters: 'JOINED_FILTERS'

---
hibernate:
    allow_update_outside_transaction: true # fallback // TODO: hibernate 5.1 behavior
    cache:
        default_schema: 'public'
        ehcache:
            missing_cache_strategy: 'create'
        queries: false
        use_second_level_cache: true
        use_query_cache: false
        region:
            factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
            #factory_class: org.hibernate.cache.jcache.JCacheRegionFactory # jcache instead of ehcache

dataSource:
    pooled: true
    jmxExport: true
    autoReconnect: true
    driverClassName: org.postgresql.Driver
    dialect: org.hibernate.dialect.PostgreSQLDialect
    username: laser
    password: laser
    properties:
        jmxEnabled: true
        initialSize: 5
        maxActive: 50
        minIdle: 5
        maxIdle: 25
        maxWait: 10000
        maxAge: 600000
        timeBetweenEvictionRunsMillis: 5000
        minEvictableIdleTimeMillis: 60000
        validationQuery: SELECT 1
        validationQueryTimeout: 3
        validationInterval: 15000
        testOnBorrow: true
        testWhileIdle: true
        testOnReturn: false
        jdbcInterceptors: ConnectionState
        defaultTransactionIsolation: java.sql.Connection.TRANSACTION_READ_COMMITTED

environments:
    development:
        dataSource:
            dbCreate: none #create-drop
            url: jdbc:postgresql://localhost:5432/laser3
    test:
        dataSource:
            dbCreate: none #update
            url: jdbc:postgresql://localhost:5432/laser3
    production:
        dataSource:
            dbCreate: none
            url: jdbc:postgresql://localhost:5432/laser3
