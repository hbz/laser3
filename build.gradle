import java.text.SimpleDateFormat

version '3.0.0.alpha'
group 'de.laser'

// ---[ build script ]---

buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://repo.grails.org/grails/core' }
    }
    // https://github.com/n0mer/gradle-git-properties/issues/195
    configurations.all {
        resolutionStrategy.force "org.eclipse.jgit:org.eclipse.jgit:5.13.0.202109080827-r"
    }
    dependencies {
        classpath 'org.grails:grails-gradle-plugin:' + grailsGradlePluginVersion
        classpath 'org.grails.plugins:hibernate5:7.2.1'                                             // from 7.0.5

        // https://github.com/grails/grails-database-migration
        classpath 'org.grails.plugins:database-migration:4.1.0'                                     // from 3.0.3
        // https://github.com/bertramdev/asset-pipeline
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:3.4.6'                             // from 3.2.4
        // https://github.com/n0mer/gradle-git-properties
        classpath 'gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.2.4'   // 2.4.0 available

        // -- dependency resolving issue

        classpath 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1' // TODO - remove
        classpath 'org.quartz-scheduler:quartz:2.3.2'
    }
}

// ---[ applying plugins ]---

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.grails.grails-web'
apply plugin: 'org.grails.grails-gsp'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'com.bertramlabs.asset-pipeline'

// ---[ plugin: database migration ! before dependencies configuration ]---

sourceSets {
    main {
        resources { srcDir 'grails-app/migrations' }
    }
}

// ---[ config ]---

repositories {
    mavenLocal()
    maven { url 'https://repo.grails.org/grails/core' }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.grails:grails-core'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'          // compileOnly?
    implementation 'org.grails:grails-web-boot'
    implementation 'org.grails:grails-logging'
    implementation 'org.grails:grails-plugin-rest'
    implementation 'org.grails:grails-plugin-databinding'
    implementation 'org.grails:grails-plugin-i18n'
    implementation 'org.grails:grails-plugin-services'
    implementation 'org.grails:grails-plugin-url-mappings'
    implementation 'org.grails:grails-plugin-interceptors'
    implementation 'org.grails.plugins:cache'
    implementation 'org.grails.plugins:async'
    implementation 'org.grails.plugins:scaffolding'
    implementation 'org.grails.plugins:events'
    implementation 'org.grails.plugins:hibernate5'
    implementation 'org.hibernate:hibernate-core:5.6.8.Final'                      // from 5.4.18.Final
    implementation 'org.grails.plugins:gsp'

    implementation 'io.micronaut:micronaut-http-client'
    compileOnly 'io.micronaut:micronaut-inject-groovy'

    console 'org.grails:grails-console'
    profile 'org.grails.profiles:web'
    runtimeOnly 'org.apache.tomcat:tomcat-jdbc'                             // from runtime
    runtimeOnly 'javax.xml.bind:jaxb-api:2.3.1'                             // from runtime
//    runtime 'org.glassfish.web:el-impl:2.2.1-b05'                         // -- nn --
//    runtime 'com.h2database:h2'                                           // -- nn --

    // --------------------------------------------------

    // https://mvnrepository.com/artifact/org.elasticsearch.client/elasticsearch-rest-high-level-client
    implementation 'org.elasticsearch:elasticsearch:7.4.2'
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.4.2'

    // https://grails-plugins.github.io/grails-spring-security-core/
    implementation 'org.grails.plugins:spring-security-core:4.0.4'             // from 3.2.3
    // https://github.com/bobbywarner/grails-http-builder-helper
    implementation 'org.grails.plugins:http-builder-helper:1.1.0'              // TODO - remove
    // https://github.com/symentis/grails-audit-logging-plugin/
    implementation 'org.grails.plugins:audit-logging:4.0.3'                    // from 3.0.3
    // https://github.com/grails/grails-database-migration
    implementation 'org.grails.plugins:database-migration:4.1.0'               // from 3.0.3
    // https://github.com/uberall/grails-executor
    implementation 'org.grails.plugins:grails-executor:0.4'                    // DEPRECATED
    // https://github.com/grails3-plugins/mail
    implementation 'org.grails.plugins:mail:3.0.0'                             // from 2.0.0
    // https://github.com/grails-plugins/grails-quartz
    implementation 'org.grails.plugins:quartz:2.0.13'
    // https://github.com/zyro23/grails-spring-websocket
    implementation 'org.grails.plugins:grails-spring-websocket:2.5.0.RC1'
    // https://github.com/rlovtangen/wkhtmltopdf
    implementation 'org.grails.plugins:wkhtmltopdf:1.0.0.RC9'

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-ehcache
    implementation 'org.hibernate:hibernate-ehcache:5.6.8.Final'               // from 5.1.16.Final
    // https://mvnrepository.com/artifact/net.sf.ehcache/ehcache
    implementation 'net.sf.ehcache:ehcache:2.10.9.2'                           // from 2.10.6
//    implementation 'org.hibernate:hibernate-jcache:5.4.33.Final'             // instead of hibernate-ehcache:5.1.16.Final
//    implementation 'org.ehcache:ehcache:3.9.9'                               // instead of net.sf.ehcache:ehcache:2.10.9.2

    // https://github.com/qos-ch/logback
    implementation('ch.qos.logback:logback-classic:1.2.8')             // downgrade from 1.2.10

    // https://commons.apache.org/proper/commons-io/
    implementation 'commons-io:commons-io:2.11.0'                      // from 2.6
    // https://github.com/albfernandez/juniversalchardet
    implementation 'com.github.albfernandez:juniversalchardet:2.4.0'   // from 2.3.0
    // http://opencsv.sourceforge.net/
    implementation 'com.opencsv:opencsv:4.6'                           // from 3.7 : 5.x available
    // https://commons.apache.org/proper/commons-lang/
    implementation 'org.apache.commons:commons-lang3:3.12.0'           // from 3.9
    // https://poi.apache.org/
    implementation 'org.apache.poi:poi-ooxml:3.17'                     // from 3.9 : 5.x available
    // http://gpars.org/webapp/guide/
    implementation 'org.codehaus.gpars:gpars:1.2.1'
    // https://github.com/liquibase/liquibase
    implementation 'org.liquibase:liquibase-core:4.8.0'                // from 3.5.5 : + org.grails.plugins:database-migration

    runtimeOnly 'org.postgresql:postgresql:42.3.3'                     // from 42.3.0

    // -- dependency resolving issue

    implementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1' // TODO - remove
    implementation 'org.quartz-scheduler:quartz:2.3.2'
}

springBoot {
    mainClass = 'de.laser.Application'
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
//        '-XX:HotswapAgent=fatjar',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

// ---[ plugin: gradle-git-properties ]---

gitProperties {
    dateFormat = "dd-MM-yyyy'T'HH:mm:ssZ"
    //dateFormatTimeZone = "PST"
    gitPropertiesDir = new File("${project.rootDir}/")
}

buildProperties {
    inputs.property('info.app.build.date', new SimpleDateFormat('dd.MM.yyyy HH:mm').format(new Date()))
    inputs.property('info.app.build.host', InetAddress.localHost.hostName)
    inputs.property('info.app.build.javaVersion', System.getProperty('java.version'))

    doLast {
        File grailsBuildInfo = it.outputs.files.files.find { it.name == 'grails.build.info' } as File
        if (! grailsBuildInfo) return

        Properties properties = new Properties()
        grailsBuildInfo.withInputStream { properties.load(it) } // read props from file
        File BuildInfoFile = new File("${project.rootDir}/git.properties")
        BuildInfoFile.withInputStream { properties.load(it) } // read props from file

        properties.setProperty('build.time', new SimpleDateFormat("dd.MM.yyyy HH:mm:ss").format(new Date()))

        grailsBuildInfo.withOutputStream { properties.store(it, null) } // write back to file
    }
}

// ---[ war ]---

war {
    enabled = true
    archiveBaseName = 'laser3'
    archiveFileName = 'laser3.war'
}
grails {
    pathingJar = true // windows - command line limitation
}

// ---[ plugin: asset pipeline ]---

assets {
    minifyJs = true
    minifyCss = true
    minifyOptions = [
            languageMode:   'ES6',
            targetLanguage: 'ES5_STRICT'
    ]
    skipNonDigests = true

    from '/themes'
    excludes = [
            // javascripts/*
            'libs/**',
            'modules/**',
            // themes/*
            'accessibility/**',
            'javascript/**',
            'laser/**',
            // vendor/*
            'bulma/**',
            'cryptoJS-v3.1.2/**',
            'echarts/**',
            'datatables/**',
            'select2/**/*.js',
            'select2/**/*.css',
            'spring-websocket/**',
            'swagger-ui/**',
    ]
}

// ---[ gradle tasks ]---

apply from: 'laserTasks.gradle'

tasks.withType(GroovyCompile) {
    configure(groovyOptions) { forkOptions.jvmArgs = ['-Xmx1024m'] }
}