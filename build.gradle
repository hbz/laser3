// ---[ build

buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://repo.grails.org/grails/core' }
    // https://github.com/n0mer/gradle-git-properties/issues/195
    //TODO configurations.all {
    //    resolutionStrategy.force "org.eclipse.jgit:org.eclipse.jgit:5.13.0.202109080827-r"
    // }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'org.grails.plugins:hibernate5:7.0.5'
        classpath 'org.grails.plugins:database-migration:4.0.0'         // from 3.0.3
        // classpath 'gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0'    // -- nn --
        // https://github.com/bertramdev/asset-pipeline
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:3.4.3' // from 3.2.4
        // TODO classpath 'gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.2.4'

        // dependency resolving issue
        classpath 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
        classpath 'org.quartz-scheduler:quartz:2.3.2'
    }
}

// ---[ applying plugins

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.grails.grails-web'
// apply plugin: 'com.github.erdi.webdriver-binaries'        // -- nn --
apply plugin: 'com.bertramlabs.asset-pipeline'
apply plugin: 'org.grails.grails-gsp'
// TODO apply plugin: 'com.gorylenko.gradle-git-properties'

// ---[ config

version '3.0.0.alpha'
group 'laser3'

repositories {
    mavenLocal()
    maven { url 'https://repo.grails.org/grails/core' }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

// ---[ plugin: database migration ! before dependencies configuration

sourceSets {
    main {
        resources {
            srcDir 'grails-app/migrations'
        }
    }
}

dependencies {
     developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compile 'org.grails:grails-core'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.grails:grails-web-boot'
    compile 'org.grails:grails-logging'
    compile 'org.grails:grails-plugin-rest'
    compile 'org.grails:grails-plugin-databinding'
    compile 'org.grails:grails-plugin-i18n'
    compile 'org.grails:grails-plugin-services'
    compile 'org.grails:grails-plugin-url-mappings'
    compile 'org.grails:grails-plugin-interceptors'
    compile 'org.grails.plugins:cache'
    compile 'org.grails.plugins:async'
    compile 'org.grails.plugins:scaffolding'
    compile 'org.grails.plugins:events'
    compile 'org.grails.plugins:hibernate5'
    compile 'org.hibernate:hibernate-core:5.4.18.Final'
    compile 'org.grails.plugins:gsp'

    compileOnly 'io.micronaut:micronaut-inject-groovy'
    console 'org.grails:grails-console'
    profile 'org.grails.profiles:web'
//    runtime 'org.glassfish.web:el-impl:2.1.2-b03'                         // -- nn --
//    runtime 'com.h2database:h2'                                           // -- nn --
    runtime 'org.apache.tomcat:tomcat-jdbc'
    runtime 'javax.xml.bind:jaxb-api:2.3.1'
//    runtime 'com.bertramlabs.plugins:asset-pipeline-grails:3.4.3'         // from 3.2.4 // -- nn --
//    testCompile "io.micronaut:micronaut-inject-groovy"                    // -- nn --
//    testCompile "org.grails:grails-gorm-testing-support"                  // -- nn --
//    testCompile "org.mockito:mockito-core"                                // -- nn --
//    testCompile "org.grails:grails-web-testing-support"                   // -- nn --
//    testCompile "org.grails.plugins:geb"                                  // -- nn --
//    testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"   // -- nn --
//    testCompile "org.seleniumhq.selenium:selenium-api:3.14.0"             // -- nn --
//    testCompile "org.seleniumhq.selenium:selenium-support:3.14.0"         // -- nn --
//    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"   // -- nn --
//    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"  // -- nn --

    // legacy
    // --------------------------------------------------
    compile 'org.grails:grails-docs:4.0.13'

    // https://mvnrepository.com/artifact/org.elasticsearch.client/elasticsearch-rest-high-level-client
    compile 'org.elasticsearch:elasticsearch:7.4.2'
    compile 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.4.2'

    // https://grails-plugins.github.io/grails-spring-security-core/
    compile 'org.grails.plugins:spring-security-core:4.0.4'     // from 3.2.3

    // https://github.com/bobbywarner/grails-http-builder-helper
    compile 'org.grails.plugins:http-builder-helper:1.1.0'

    // https://github.com/symentis/grails-audit-logging-plugin/
    compile 'org.grails.plugins:audit-logging:4.0.3'            // from 3.0.3

    // https://github.com/grails/grails-database-migration
    compile 'org.grails.plugins:database-migration:4.0.0'       // from 3.0.3

    compile 'org.grails.plugins:grails-executor:0.4'
    compile 'org.grails.plugins:mail:3.0.0'                     // from 2.0.0
    compile 'org.grails.plugins:quartz:2.0.13'

    compile 'org.hibernate:hibernate-ehcache:5.4.18.Final'      // from 5.1.16.Final
    compile 'net.sf.ehcache:ehcache:2.10.9.2'                   // from 2.10.6
    // compile 'org.hibernate:hibernate-jcache:5.4.18.Final'    // instead of hibernate-ehcache:5.1.16.Final
    // compile 'org.ehcache:ehcache:3.1.4'                      // instead of net.sf.ehcache:ehcache:2.10.9.2

    // https://plugins.grails.org/plugin/rlovtangen/wkhtmltopdf
    compile 'org.grails.plugins:wkhtmltopdf:1.0.0.RC9'

    // apache stuff
    compile 'commons-io:commons-io:2.11.0'                      // from 2.6
    compile 'commons-fileupload:commons-fileupload:1.4'         // from 1.3.3
    compile 'org.apache.commons:commons-exec:1.3'
    compile 'org.apache.commons:commons-lang3:3.12.0'           // from 3.9
    compile 'org.apache.httpcomponents:httpmime:4.5.13'         // from 4.5.4
    compile 'org.apache.poi:poi-ooxml:3.17'                     // from 3.9 : 5.x available

    // other stuff
    // compile 'ch.qos.logback:logback-classic:1.2.10'
    compile 'com.github.albfernandez:juniversalchardet:2.4.0'   // from 2.3.0
    compile 'com.opencsv:opencsv:4.6'                           // from 3.7 : 5.x available
    compile 'gov.loc:bagit:4.12.3'                              // from 4.0 : 5.x available
    compile 'org.codehaus.gpars:gpars:1.2.1'
    compile 'org.liquibase:liquibase-core:4.6.2'                // from 3.5.5 : + org.grails.plugins:database-migration

    runtime 'org.postgresql:postgresql:42.3.3'                  // from 42.3.0

    // dependency resolving issue
    implementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    implementation 'org.quartz-scheduler:quartz:2.3.2'
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

// ---[ plugin: gradle-git-properties
//TODO gitProperties {
//    //keys = ['git.branch','git.commit.id','git.commit.time']
//    dateFormat = "dd-MM-yyyy'T'HH:mm:ssZ"
//    //dateFormatTimeZone = "PST"
//    gitPropertiesDir = new File("${project.rootDir}/")
//}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

//webdriverBinaries {                   // -- nn --
//    chromedriver '2.45.0'
//    geckodriver '0.24.0'
//}

//tasks.withType(Test) {                // -- nn --
//    systemProperty 'geb.env', System.getProperty('geb.env')
//    systemProperty 'geb.build.reportsDir', reporting.file('geb/integrationTest')
//    systemProperty 'webdriver.chrome.driver', System.getProperty('webdriver.chrome.driver')
//    systemProperty 'webdriver.gecko.driver', System.getProperty('webdriver.gecko.driver')
//}

// ---[ plugin: asset pipeline

assets {
    minifyJs = true
    minifyCss = true
    minifyOptions = [
            languageMode: 'ES6',
            targetLanguage: 'ES5_STRICT'
    ]
    skipNonDigests = true

    from '/themes'
    excludes = [
            // javascripts/*
            'libs/**',
            'modules/**',
            // themes/*
            'accessibility/**',
            'javascript/**',
            'laser/**',
            // vendor/*
            'bulma/**',
            'cryptoJS-v3.1.2/**',
            'echarts/**',
            'datatables/**',
            'select2/**/*.js',
            'select2/**/*.css',
            'swagger-ui/**',
    ]
}

// ---[ gradle tasks

tasks.register('devtoolsRestart', Exec) {
    group = 'laser'
    workingDir ='./grails-app/conf/spring'
    commandLine = ['touch', 'restart.trigger']
    println "${workingDir} -> ${commandLine}"
}

